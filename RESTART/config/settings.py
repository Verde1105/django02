"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '5889^4cnaf8nv#zhk+x5($(hvezd&d2rw^owdksqdf%0)mqxn1'


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

#mkdir '폴더명' : 디렉터리 만드는 명령어.

#createsuperuser : admin계정 생성법. 아이디 : admin #비번 : qazsedcrfvgyhnujmiok.(반드시 . 까지 쳐야만 한다. hhr을 타자기에서 그대로 친것)

#컨트롤 + ㅋ : 셸에서 나가기. 혹은 exit 누르면 어찌해야 나갈수있는지 안내해줌.
#Question.objects.all() : 모델 데이터 조회

# == 여기까지가 전부 모델 입력시 해야 할 일 순서대로.
#q = Question(subject='질문내용 입력', content='질변답변 입력.', create_date=timezone.now()) : 객체 생성 예시, 객체명.save()하면 데이터베이스에 저장.
#from django.utils import timezone : 장고셸에 타임존 넣어주기. 안그럼 계속 못찾는다. 
#from pybo.models import Question, Answer : 모델을 장고 셸에 임포트 
#shell : 장고에 필요한 환경들이 자동 설정되어있다.
#sqlmigrate 'pybo 0001' : 사용시 미그렛이 실행될때 어던 sql문이 나와 실행하는지 볼 수 잇다.
#makemigrations : 테이블 작업파일 생성할때 필요한것.(메이크 마이그레이션) 만들어야 할 리스트에 올리는 느낌.
#migrate : 테이블'만들때' 필요한것. 상단의 마이그레이션 실행 후 실행가능. (마이그레이트이라 읽는듯)
#pip install mysqlclient : mysql 다운
#runserver : 서버돌릴때 필요한것.

# Application definition

INSTALLED_APPS = [
    'common.apps.CommonConfig',
    'pybo.apps.PyboConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [#스타일시트 적용을 위한 스태틱 경로 추가
    BASE_DIR / 'static',
]

LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'